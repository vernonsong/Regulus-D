name: CI-workflow
on:
  pull_request:
    branches: [ master, dev* ]
jobs:
  generate-view:
    name: DependencySnapshot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shall
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Submit Dependency Snapshot
        uses: advanced-security/maven-dependency-submission-action@v4
  #  check-commit-message:
  #    name: Check Commit Message
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Check Commit Type
  #        uses: gsactions/commit-message-checker@v2
  #        with:
  #          pattern: '\[[^]]+\] .+$'
  #          flags: 'gm'
  #          error: 'Your first line has to contain a commit type like "[BUGFIX]".'
  #      - name: Check Line Length
  #        uses: gsactions/commit-message-checker@v2
  #        with:
  #          pattern: '^[^#].{74}'
  #          error: 'The maximum line length of 74 characters is exceeded.'
  #          excludeDescription: 'true' # optional: this excludes the description body of a pull request
  #          excludeTitle: 'true' # optional: this excludes the title of a pull request
  #          checkAllCommitMessages: 'true' # optional: this checks all commits associated with a pull request
  #          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true
  #      - name: Check for Resolves / Fixes
  #        uses: gsactions/commit-message-checker@v2
  #        with:
  #          pattern: '^.+(Resolves|Fixes): \#[0-9]+$'
  #          error: 'You need at least one "Resolves|Fixes: #<issue number>" line.'

  check-code-by-SonarQube:
    name: Check Code by SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=vernonsong_Regulus-D

  check-unit-test:
    name: Check UnitTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 22
        uses: actions/setup-java@v1
        with:
          java-version: 22
      - name: Install dependencies
        run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      - name: Run tests and collect coverage
        run: mvn -B test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
           CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}